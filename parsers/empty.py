import psycopg2
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
import os
import re
import requests

# ====== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ======
# –¢—É—Ç –ø–∞—Ä—Å–∏–º —Ç–æ—á–µ—á–Ω–æ –¥–µ—Ç–∞–ª–∏ –≤ –º–æ–¥–µ–ª—è—Ö –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (–∏ –±–µ–∑ —Å–∞–º–∏—Ö –º–æ–¥–µ–ª–µ–π, –∏—Ö –≤—Ä—É—á–Ω—É—é —Å–æ–∑–¥–∞–µ–º)
# –í–≤–µ–¥–∏ –≤—Ä—É—á–Ω—É—é –¥–∞–Ω–Ω—ã–µ –æ –º–æ–¥–µ–ª–∏
model_name = "d1"  # –ù–∞–∑–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏
category_name = "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã"  # –ö–∞—Ç–µ–≥–æ—Ä–∏—è –º–æ–¥–µ–ª–∏
model_url = "https://servismakita.ru/catalog/dyrokoly/"  # –í–≤–µ–¥–∏ —Å—é–¥–∞ URL –º–æ–¥–µ–ª–∏

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = psycopg2.connect(
    dbname="makita",
    user="postgres",
    password="2831742dfcz",
    host="localhost"
)
cursor = conn.cursor()

# –ù–∞—Å—Ç—Ä–æ–∏–º Selenium
options = webdriver.ChromeOptions()
driver = webdriver.Chrome(options=options)

def sanitize_filename(name):
    return re.sub(r'[\\/:"*?<>|]', '_', name)

# === 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ===
cursor.execute("SELECT id FROM categories WHERE name = %s", (category_name,))
category_row = cursor.fetchone()

if category_row:
    category_id = category_row[0]
else:
    cursor.execute("INSERT INTO categories (name, createdat, updatedat) VALUES (%s, NOW(), NOW()) RETURNING id", (category_name,))
    category_id = cursor.fetchone()[0]
    conn.commit()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name}")

# === 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ ===
cursor.execute("SELECT id FROM models WHERE name = %s", (model_name,))
model_row = cursor.fetchone()

if model_row:
    model_id = model_row[0]
else:
    cursor.execute("""
        INSERT INTO models (name, image_path, category_id, createdat, updatedat) 
        VALUES (%s, %s, %s, NOW(), NOW()) RETURNING id
    """, (model_name, f"images/{sanitize_filename(category_name)}/{model_name}/{model_name}_1.webp", category_id))
    model_id = cursor.fetchone()[0]
    conn.commit()
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –º–æ–¥–µ–ª—å: {model_name}")

# === 3. –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –º–æ–¥–µ–ª–∏ ===
driver.get(model_url)
time.sleep(5)

# === 4. –ü–∞—Ä—Å–∏–º –¥–µ—Ç–∞–ª–∏ ===
parts_table = driver.find_elements(By.CSS_SELECTOR, "tr.componentListSingle")
parts_data = []

for part in parts_table:
    cells = part.find_elements(By.CSS_SELECTOR, "td")
    if len(cells) >= 5:
        price_raw = cells[3].text.strip().replace(' ', '').replace('‚ÇΩ', '')
        parts_data.append({
            "order": cells[0].text.strip() or None,
            "article": cells[1].text.strip() or None,
            "name": cells[2].text.strip() or None,
            "price": float(price_raw) if price_raw.replace('.', '', 1).isdigit() else 0,
            "quantity": cells[4].text.strip() or None
        })

print(f"üîé –ù–∞–π–¥–µ–Ω–æ {len(parts_data)} –¥–µ—Ç–∞–ª–µ–π –¥–ª—è –º–æ–¥–µ–ª–∏ {model_name}")

# === 5. –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –≤ –ë–î ===
for part_data in parts_data:
    cursor.execute("""
        INSERT INTO parts (model_id, number, part_number, name, price, quantity, createdat, updatedat)
        VALUES (%s, %s, %s, %s, %s, %s, NOW(), NOW())
        ON CONFLICT (model_id, number) 
        DO UPDATE SET 
            name = EXCLUDED.name,
            price = EXCLUDED.price,
            quantity = EXCLUDED.quantity,
            updatedat = NOW();
    """, (
        model_id, part_data["order"], part_data["article"], part_data["name"],
        part_data["price"], part_data["quantity"]
    ))
conn.commit()

# === 6. –ü–∞—Ä—Å–∏–º —Å–ª–∞–π–¥—ã ===
slide_number = 1

while True:
    try:
        print(f"üì∏ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å–ª–∞–π–¥ {slide_number}...")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Å–ª–∞–π–¥–æ–≤ –ø–µ—Ä–µ–¥ –ø–∞—Ä—Å–∏–Ω–≥–æ–º
        try:
            active_slide = WebDriverWait(driver, 5).until(
                EC.presence_of_element_located((By.CSS_SELECTOR, ".swiper-slide-active"))
            )
            print(f"üì∏ –°–ª–∞–π–¥ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É.")
        except Exception:
            print("‚ö†Ô∏è –°–ª–∞–π–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —ç—Ç–æ–π –º–æ–¥–µ–ª–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª–∞–π–¥–æ–≤.")
            break  # –ï—Å–ª–∏ —Å–ª–∞–π–¥–æ–≤ –Ω–µ—Ç, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ª–∞–π–¥—ã
        img_elements = active_slide.find_elements(By.CSS_SELECTOR, "img")

        # –°–∫–∞—á–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–∞–π–¥–∞
        for img in img_elements:
            img_src = img.get_attribute("src")
            if img_src:
                response = requests.get(img_src, stream=True)
                if response.status_code == 200:
                    folder_path = f"public/images/{sanitize_filename(category_name)}/{model_name}"
                    os.makedirs(folder_path, exist_ok=True)

                    image_name = f"{model_name}_{slide_number}.webp"
                    image_path = os.path.join(folder_path, image_name)

                    with open(image_path, "wb") as file:
                        for chunk in response.iter_content(1024):
                            file.write(chunk)

                    print(f"üì• –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {image_path}")

                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ª–∞–π–¥ –≤ –ë–î
                    cursor.execute("""
                        INSERT INTO slides (model_id, slide_number, image_path, image_width, image_height, createdat, updatedat)
                        VALUES (%s, %s, %s, %s, %s, NOW(), NOW())
                        ON CONFLICT (model_id, slide_number) 
                        DO UPDATE SET 
                            image_path = EXCLUDED.image_path,
                            updatedat = NOW();
                    """, (model_id, slide_number, image_name, img.get_attribute("width"), img.get_attribute("height")))
                    conn.commit()

        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
        try:
            next_button = WebDriverWait(driver, 5).until(
                EC.element_to_be_clickable((By.CSS_SELECTOR, ".swiper-button-next"))
            )
            next_button.click()
            slide_number += 1
            time.sleep(2)
        except Exception:
            print("‚úÖ –í—Å–µ —Å–ª–∞–π–¥—ã –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.")
            break

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–ª–∞–π–¥–∞: {e}")
        break

# === 7. –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥ ===
cursor.close()
conn.close()
driver.quit()

print("‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω.")
