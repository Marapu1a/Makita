import os
import requests
from selenium import webdriver
from selenium.webdriver.common.by import By
import time

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Selenium
options = webdriver.ChromeOptions()
driver = webdriver.Chrome(options=options)

# –û—Ç–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞
base_url = "https://servismakita.ru/catalog/"
driver.get(base_url)
time.sleep(3)

# –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
categories = driver.find_elements(By.CSS_SELECTOR, ".catalogElementIns a.name")
categories_list = [(cat.text.strip(), cat.get_attribute("href")) for cat in categories]

def sanitize_filename(name):
    """–û—á–∏—â–∞–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞ –æ—Ç –∑–∞–ø—Ä–µ—â—ë–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤"""
    return "".join(c if c.isalnum() or c in " _-" else "_" for c in name)

def download_pdf(category_name, model_name, pdf_url):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç PDF –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –≤ –Ω—É–∂–Ω—É—é –ø–∞–ø–∫—É"""
    sanitized_category = sanitize_filename(category_name)
    sanitized_model = sanitize_filename(model_name.replace("_PDF", ""))  # –£–±–∏—Ä–∞–µ–º _PDF
    
    folder_path = os.path.join("public", "pdfs", sanitized_category)
    os.makedirs(folder_path, exist_ok=True)  # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç

    file_path = os.path.join(folder_path, f"{sanitized_model}.pdf")
    
    if os.path.exists(file_path):
        print(f"  üîπ {model_name}.pdf —É–∂–µ —Å–∫–∞—á–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        return
    
    try:
        print(f"  ‚è¨ –ö–∞—á–∞—é {model_name}...")
        response = requests.get(pdf_url, stream=True, timeout=10)
        response.raise_for_status()

        with open(file_path, "wb") as file:
            for chunk in response.iter_content(1024):
                file.write(chunk)

        print(f"  ‚úÖ {model_name}.pdf —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {file_path}")

    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ {model_name}: {e}")

def find_pdf_models(container):
    """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∏—â–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ PDF-–º–æ–¥–µ–ª–∏ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ"""
    pdf_models = set()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º `set`, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã

    sub_divs = container.find_elements(By.XPATH, ".//a[contains(text(), '_PDF')]")
    for link in sub_divs:
        model_name = link.text.strip()
        model_url = link.get_attribute("href")
        pdf_models.add((model_name, model_url))

    return list(pdf_models)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π

# –ü—Ä–æ—Ö–æ–¥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
for category_name, category_url in categories_list:
    print(f"\nüìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category_name} ({category_url})")
    driver.get(category_url)
    time.sleep(3)

    containers = driver.find_elements(By.CSS_SELECTOR, ".container-list")

    all_pdf_models = set()  # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏ –¥–ª—è –≤—Å–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for container in containers:
        all_pdf_models.update(find_pdf_models(container))

    if all_pdf_models:
        print("  ‚úÖ –ù–∞–π–¥–µ–Ω—ã –º–æ–¥–µ–ª–∏ —Å PDF:")
        for model_name, model_url in all_pdf_models:
            print(f"    üìÑ {model_name} ‚Üí {model_url}")
            download_pdf(category_name, model_name, model_url)

# –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
driver.quit()
print("\n‚úÖ –ü–∞—Ä—Å–∏–Ω–≥ –∑–∞–≤–µ—Ä—à—ë–Ω, –≤—Å–µ PDF —Å–∫–∞—á–∞–Ω—ã.")
