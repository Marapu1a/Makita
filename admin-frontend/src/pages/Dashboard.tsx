import { useRef, useState } from "react";
import { useNavigate } from "react-router-dom";
import { uploadPriceFile, updatePrices } from "../api/api"; // –ò–º–ø–æ—Ä—Ç—ã –ø–æ–¥ —Ç–≤–æ–π api.ts

const Dashboard = () => {
  const navigate = useNavigate();
  const fileInputRef = useRef<HTMLInputElement | null>(null);

  const [file, setFile] = useState<File | null>(null);
  const [isUploading, setIsUploading] = useState(false);
  const [isUploaded, setIsUploaded] = useState(false);
  const [isUpdating, setIsUpdating] = useState(false);

  const handleChooseFile = () => {
    fileInputRef.current?.click();
  };

  const handleUpload = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!file) return;

    try {
      setIsUploading(true);
      await uploadPriceFile(file);
      setIsUploaded(true);
      alert("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä");
    } catch (error) {
      alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞");
    } finally {
      setIsUploading(false);
    }
  };

  const handleUpdatePrices = async () => {
    try {
      setIsUpdating(true);
      await updatePrices();
      alert("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–µ–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
    } catch (error) {
      alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–∑—ã");
    } finally {
      setIsUpdating(false);
    }
  };

  const handleLogout = () => {
    localStorage.removeItem("token");
    navigate("/login");
  };

  return (
    <div className="flex flex-col justify-center items-center min-h-screen space-y-8 p-4">
      <h1 className="text-3xl font-bold mb-6">–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</h1>

      <div className="flex space-x-4 mb-8">
        <button
          onClick={() => navigate("/catalog")}
          className="px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-700"
        >
          –ö–∞—Ç–∞–ª–æ–≥
        </button>
        <button
          onClick={() => navigate("/orders")}
          className="px-6 py-3 bg-green-500 text-white rounded-lg hover:bg-green-700"
        >
          –ó–∞–∫–∞–∑—ã
        </button>
        <button
          onClick={async () => {
            try {
              const res = await fetch("http://localhost:5001/api/backup-db", {
                method: "POST",
                headers: {
                  Authorization: `Bearer ${localStorage.getItem("token")}`,
                },
              });

              const data = await res.json();
              alert(`‚úÖ ${data.message}`);
            } catch (err) {
              alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞");
            }
          }}
          className="px-6 py-3 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600"
        >
          –°–¥–µ–ª–∞—Ç—å –±—ç–∫–∞–ø
        </button>
      </div>

      <div className="w-full max-w-md space-y-6">
        {/* –®–∞–≥ 1 */}
        <div className="flex flex-col items-center">
          <h2 className="text-xl font-semibold mb-2">
            üìÑ 1. –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å —Ü–µ–Ω–∞–º–∏
          </h2>
          <input
            type="file"
            ref={fileInputRef}
            hidden
            onChange={(e) => {
              const selected = e.target.files?.[0];
              if (!selected) return;

              if (selected.name !== "price.xlsx") {
                alert("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è: price.xlsx");
                setFile(null);
                if (fileInputRef.current) {
                  fileInputRef.current.value = "";
                }
                return;
              }

              setFile(selected);
              setIsUploaded(false);
            }}
          />
          <button
            type="button"
            onClick={handleChooseFile}
            disabled={isUploading || isUpdating}
            className="px-4 py-2 bg-purple-500 text-white rounded-lg hover:bg-purple-700 disabled:bg-gray-400"
          >
            –í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª
          </button>
          {file && (
            <p className="mt-2 text-green-600 font-medium">
              ‚úÖ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {file.name}
            </p>
          )}
        </div>

        {/* –®–∞–≥ 2 */}
        <div className="flex flex-col items-center">
          <h2 className="text-xl font-semibold mb-2">
            üì§ 2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä
          </h2>
          <form onSubmit={handleUpload}>
            <button
              type="submit"
              disabled={!file || isUploading || isUpdating}
              className="px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-700 disabled:bg-gray-400"
            >
              {isUploading ? "–ó–∞–≥—Ä—É–∑–∫–∞..." : "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª"}
            </button>
          </form>
          {isUploaded && (
            <p className="mt-2 text-green-600 font-medium">
              ‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω
            </p>
          )}
        </div>

        {/* –®–∞–≥ 3 */}
        <div className="flex flex-col items-center">
          <h2 className="text-xl font-semibold mb-2">üõ† 3. –û–±–Ω–æ–≤–∏—Ç–µ –±–∞–∑—É —Ü–µ–Ω</h2>
          <button
            type="button"
            onClick={handleUpdatePrices}
            disabled={!isUploaded || isUploading || isUpdating}
            className="px-6 py-2 bg-indigo-500 text-white rounded-lg hover:bg-indigo-700 disabled:bg-gray-400"
          >
            {isUpdating ? "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ..." : "–û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—É"}
          </button>
        </div>
      </div>

      <button
        onClick={handleLogout}
        className="mt-8 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-700"
      >
        –í—ã–π—Ç–∏
      </button>
    </div>
  );
};

export default Dashboard;
